@model BookStoreAli.Models.Book

@{
    ViewBag.Title = "Create";
}

<h2>Add Book</h2>

<br />

<form method="Post">
    <div class="row">
        <label class="col-md-4">@nameof(Model.Name)</label>
       @* <input class="form-control col-md-6" name="@nameof(Model.Name)" value="@Model.Name" />*@
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger col-md-offset-4" })
    </div>


    <br />
    <div class="row">
        <label class="col-md-4">@nameof(Model.Price)</label>
     @*   <input class="form-control col-md-6" name="@nameof(Model.Price)" value="@Model.Price" type="number" />*@
        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
        <div class="col-md-offset-4">@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })</div>

    </div>


    <br />
    <div class="row">
        <label class="col-md-4">@nameof(Model.Category)</label>
        @Html.DropDownList(nameof(Model.Category), Model.Categories, "Select Category", new { @class = "form-control" })
        @*@Html.DropDownList()*@
        <div class="col-md-offset-4">@Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })</div>

    </div>
    <br />
    <div class="row">
        <label class="col-md-4">@nameof(Model.Author)</label>
        @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
       @* <input class="form-control col-md-6" name="@nameof(Model.Author)" value="@Model.Author" />*@

    </div>
    @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger col-md-offset-4" })

    <br />
    <div class="row">
        <label class="col-md-4">@nameof(Model.Available)</label>
        <select class="form-control" name="@nameof(Model.Available)">
            <option value="">Select Availability</option>
            <option value="true">Yes</option>
            <option value="false">No</option>
        </select>
        <div class="col-md-offset-4"> @Html.ValidationMessageFor(model => model.Available, "", new { @class = "text-danger" })</div>


    </div>
    <br />
    <button type="submit" class="col-md-offset-4 btn btn-success">Submit</button>

    @Html.ActionLink(linkText: "Back to List", actionName: "BookDetails", routeValues: "", htmlAttributes: new { @class = "btn btn-primary" })
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

@*@section scripts{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    }*@

@*@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Book</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Available, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Available, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Available, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
*@